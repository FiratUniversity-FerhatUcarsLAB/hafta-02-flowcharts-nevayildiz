Oğrenci girişi (öğrenci no + şifre)
Ders listesini görüntüleme (döngü)
Her ders için:
Kontenjan kontrolü (koşul)
Ön koşul dersi kontrolü (koşul)
Zaman çakışması kontrolü (koşul)
Kredi limiti kontrolü (toplam ≤ 35) (koşul)
Ders ekleme/çıkarma (döngü)
Danışman onayı gerekli mi? (GPA ¡ 2.5 ise) (koşul)
Kayıt özeti gösterme ve kayıt onaylama. Tüm bu kontrollerle birlikte detaylı bir pseudocode yaz. İç içe EĞER-İSE yapıları ve döngüleri kullan
Tabii! Aşağıda verdiğin gereksinimlere uygun, detaylı ve iç içe EĞER-İSE yapıları ile döngüler içeren bir pseudocode hazırladım:
BAŞLA

    // 1. Öğrenci girişi
    YAZDIR "Öğrenci numaranızı giriniz:"
    ÖĞRENCİ_NO = GİRİS
    YAZDIR "Şifrenizi giriniz:"
    SIFRE = GİRİS

    EĞER (ÖĞRENCİ_NO ve SIFRE geçerli ise) 
        YAZDIR "Giriş başarılı."
        
        // 2. Ders listesini görüntüleme
        DERS_LISTESI = Tüm dersler
        YAZDIR "Ders Listesi:"
        DÖNGÜ (HER DERS İÇİN DERS_LISTESI)
            YAZDIR DERS_ADI, KREDİ, KONTENJAN, ÖN_KOŞUL, SAAT

        // 3. Ders seçme döngüsü
        SEÇİLEN_DERSLER = boş liste
        TOPLAM_KREDİ = 0

        DÖNGÜ (ÖĞRENCİ DERS SEÇMEYE DEVAM ETTİKÇE)
            YAZDIR "Seçmek istediğiniz dersin kodunu giriniz:"
            DERS_SEC = GİRİS

            // 3.1 Kontenjan kontrolü
            EĞER (DERS_SEC.KONTENJAN > 0) 
                
                // 3.2 Ön koşul dersi kontrolü
                EĞER (DERS_SEC.ÖN_KOŞUL == NULL veya ÖĞRENCİ daha önce tamamladıysa)
                    
                    // 3.3 Zaman çakışması kontrolü
                    EĞER (DERS_SEC.ZAMAN çakışmıyor SEÇİLEN_DERSLER ile)
                        
                        // 3.4 Kredi limiti kontrolü
                        EĞER (TOPLAM_KREDİ + DERS_SEC.KREDİ <= 35)
                            SEÇİLEN_DERSLER'E DERS_SEC EKLE
                            TOPLAM_KREDİ = TOPLAM_KREDİ + DERS_SEC.KREDİ
                            YAZDIR DERS_SEC "dersi başarıyla eklendi."
                            
                        DEĞİLSE
                            YAZDIR "Kredi limiti aşımı! Ders eklenemedi."
                        SON
                        
                    DEĞİLSE
                        YAZDIR "Zaman çakışması var! Ders eklenemedi."
                    SON
                    
                DEĞİLSE
                    YAZDIR "Ön koşul dersi tamamlanmamış! Ders eklenemedi."
                SON
                
            DEĞİLSE
                YAZDIR "Kontenjan dolu! Ders eklenemedi."
            SON

            // Ders çıkarma seçeneği
            YAZDIR "Ders çıkarmak istiyor musunuz? (E/H)"
            CEVAP = GİRİS
            EĞER (CEVAP == "E")
                YAZDIR "Çıkarmak istediğiniz dersin kodunu giriniz:"
                DERS_CIKAR = GİRİS
                EĞER (DERS_CIKAR SEÇİLEN_DERSLER'DE VARSA)
                    SEÇİLEN_DERSLER'DEN DERS_CIKAR ÇIKAR
                    TOPLAM_KREDİ = TOPLAM_KREDİ - DERS_CIKAR.KREDİ
                    YAZDIR DERS_CIKAR "dersi başarıyla çıkarıldı."
                DEĞİLSE
                    YAZDIR "Bu ders seçilen dersler arasında değil."
                SON
            SON

            YAZDIR "Ders seçimine devam etmek istiyor musunuz? (E/H)"
            DEVAM = GİRİS
            EĞER (DEVAM == "H")
                DÖNGÜYÜ KIR
            SON
        SON_DÖNGÜ

        // 4. Danışman onayı kontrolü
        GPA = ÖĞRENCİ.GPA
        EĞER (GPA < 2.5)
            YAZDIR "Danışman onayı gerekli. Lütfen danışmanınıza başvurunuz."
        DEĞİLSE
            YAZDIR "Danışman onayı gerekli değil."
        SON

        // 5. Kayıt özeti ve onay
        YAZDIR "Seçilen Dersler:"
        DÖNGÜ (HER DERS İÇİN SEÇİLEN_DERSLER)
            YAZDIR DERS_ADI, KREDİ, SAAT
        SON_DÖNGÜ

        YAZDIR "Toplam Kredi: " + TOPLAM_KREDİ
        YAZDIR "Kayıt işlemini onaylıyor musunuz? (E/H)"
        ONAY = GİRİS
        EĞER (ONAY == "E")
            YAZDIR "Kayıt işleminiz başarıyla tamamlandı."
        DEĞİLSE
            YAZDIR "Kayıt işlemi iptal edildi."
        SON

    DEĞİLSE
        YAZDIR "Giriş başarısız. Lütfen tekrar deneyiniz."
    SON

BITIR
Bu pseudocode şunları içeriyor:
İç içe EĞER-İSE kontrolleri (kontenjan, ön koşul, zaman çakışması, kredi limiti, GPA).
Ders ekleme ve çıkarma döngüsü.
Toplam kredi ve kayıt özeti kontrolü.
Danışman onayı kontrolü.
Tabii! Aşağıda verdiğin gereksinimlere uygun, detaylı ve iç içe **EĞER-İSE** yapıları ile döngüler içeren bir **pseudocode** hazırladım:

---

```
BAŞLA

    // 1. Öğrenci girişi
    YAZDIR "Öğrenci numaranızı giriniz:"
    ÖĞRENCİ_NO = GİRİS
    YAZDIR "Şifrenizi giriniz:"
    SIFRE = GİRİS

    EĞER (ÖĞRENCİ_NO ve SIFRE geçerli ise) 
        YAZDIR "Giriş başarılı."
        
        // 2. Ders listesini görüntüleme
        DERS_LISTESI = Tüm dersler
        YAZDIR "Ders Listesi:"
        DÖNGÜ (HER DERS İÇİN DERS_LISTESI)
            YAZDIR DERS_ADI, KREDİ, KONTENJAN, ÖN_KOŞUL, SAAT

        // 3. Ders seçme döngüsü
        SEÇİLEN_DERSLER = boş liste
        TOPLAM_KREDİ = 0

        DÖNGÜ (ÖĞRENCİ DERS SEÇMEYE DEVAM ETTİKÇE)
            YAZDIR "Seçmek istediğiniz dersin kodunu giriniz:"
            DERS_SEC = GİRİS

            // 3.1 Kontenjan kontrolü
            EĞER (DERS_SEC.KONTENJAN > 0) 
                
                // 3.2 Ön koşul dersi kontrolü
                EĞER (DERS_SEC.ÖN_KOŞUL == NULL veya ÖĞRENCİ daha önce tamamladıysa)
                    
                    // 3.3 Zaman çakışması kontrolü
                    EĞER (DERS_SEC.ZAMAN çakışmıyor SEÇİLEN_DERSLER ile)
                        
                        // 3.4 Kredi limiti kontrolü
                        EĞER (TOPLAM_KREDİ + DERS_SEC.KREDİ <= 35)
                            SEÇİLEN_DERSLER'E DERS_SEC EKLE
                            TOPLAM_KREDİ = TOPLAM_KREDİ + DERS_SEC.KREDİ
                            YAZDIR DERS_SEC "dersi başarıyla eklendi."
                            
                        DEĞİLSE
                            YAZDIR "Kredi limiti aşımı! Ders eklenemedi."
                        SON
                        
                    DEĞİLSE
                        YAZDIR "Zaman çakışması var! Ders eklenemedi."
                    SON
                    
                DEĞİLSE
                    YAZDIR "Ön koşul dersi tamamlanmamış! Ders eklenemedi."
                SON
                
            DEĞİLSE
                YAZDIR "Kontenjan dolu! Ders eklenemedi."
            SON

            // Ders çıkarma seçeneği
            YAZDIR "Ders çıkarmak istiyor musunuz? (E/H)"
            CEVAP = GİRİS
            EĞER (CEVAP == "E")
                YAZDIR "Çıkarmak istediğiniz dersin kodunu giriniz:"
                DERS_CIKAR = GİRİS
                EĞER (DERS_CIKAR SEÇİLEN_DERSLER'DE VARSA)
                    SEÇİLEN_DERSLER'DEN DERS_CIKAR ÇIKAR
                    TOPLAM_KREDİ = TOPLAM_KREDİ - DERS_CIKAR.KREDİ
                    YAZDIR DERS_CIKAR "dersi başarıyla çıkarıldı."
                DEĞİLSE
                    YAZDIR "Bu ders seçilen dersler arasında değil."
                SON
            SON

            YAZDIR "Ders seçimine devam etmek istiyor musunuz? (E/H)"
            DEVAM = GİRİS
            EĞER (DEVAM == "H")
                DÖNGÜYÜ KIR
            SON
        SON_DÖNGÜ

        // 4. Danışman onayı kontrolü
        GPA = ÖĞRENCİ.GPA
        EĞER (GPA < 2.5)
            YAZDIR "Danışman onayı gerekli. Lütfen danışmanınıza başvurunuz."
        DEĞİLSE
            YAZDIR "Danışman onayı gerekli değil."
        SON

        // 5. Kayıt özeti ve onay
        YAZDIR "Seçilen Dersler:"
        DÖNGÜ (HER DERS İÇİN SEÇİLEN_DERSLER)
            YAZDIR DERS_ADI, KREDİ, SAAT
        SON_DÖNGÜ

        YAZDIR "Toplam Kredi: " + TOPLAM_KREDİ
        YAZDIR "Kayıt işlemini onaylıyor musunuz? (E/H)"
        ONAY = GİRİS
        EĞER (ONAY == "E")
            YAZDIR "Kayıt işleminiz başarıyla tamamlandı."
        DEĞİLSE
            YAZDIR "Kayıt işlemi iptal edildi."
        SON

    DEĞİLSE
        YAZDIR "Giriş başarısız. Lütfen tekrar deneyiniz."
    SON

BITIR
```

---

Bu pseudocode şunları içeriyor:

* İç içe **EĞER-İSE** kontrolleri (kontenjan, ön koşul, zaman çakışması, kredi limiti, GPA).
* Ders ekleme ve çıkarma döngüsü.
* Toplam kredi ve kayıt özeti kontrolü.
* Danışman onayı kontrolü.

---

İstersen bunu ben sana **Graphviz DOT diyagramına** çevirebilirim, böylece akış diyagramı görsel olarak hazır olur.

Bunu yapmamı ister misin?
dot diline çevir her kontrol noktasını Diamond la göster
Harika! Verdiğin pseudocode’u Graphviz DOT diline çevirelim.
Başla/Bitir → oval (shape=oval)
İşlem/Atama → kutu (shape=box)
Girdi/Çıktı → paralelkenar (shape=parallelogram)
Karar/Kontrol noktası → elmas (shape=diamond)
Aşağıdaki DOT kodu tüm kontrolleri elmaslarla gösteriyor:
digraph DersKayitSistemi {
    rankdir=TB;
    node [fontname="Arial"];

    // Başlangıç
    basla [label="BAŞLA", shape=oval];

    // Öğrenci girişi
    ogrenci_no [label="Öğrenci No Gir", shape=parallelogram];
    sifre [label="Şifre Gir", shape=parallelogram];
    giris_kontrol [label="Giriş geçerli mi?", shape=diamond];

    // Ders listesi göster
    ders_listesi [label="Ders Listesini Göster", shape=box];

    // Ders seçme döngüsü
    ders_sec [label="Ders Seç", shape=parallelogram];

    // Kontroller
    kontenjan_kontrol [label="Kontenjan var mı?", shape=diamond];
    onkosul_kontrol [label="Ön koşul tamamlandı mı?", shape=diamond];
    zaman_kontrol [label="Zaman çakışıyor mu?", shape=diamond];
    kredi_kontrol [label="Toplam kredi ≤ 35 mi?", shape=diamond];

    ders_ekle [label="Dersi ekle ve kredi güncelle", shape=box];
    ders_ekleme_hata [label="Ders eklenemedi", shape=box];

    ders_cikarmak [label="Ders çıkarmak istiyor mu?", shape=diamond];
    ders_cikar [label="Dersi çıkar ve kredi güncelle", shape=box];
    ders_cikar_hata [label="Ders seçilenlerde yok", shape=box];

    devam_ders_sec [label="Ders seçmeye devam?", shape=diamond];

    gpa_kontrol [label="GPA < 2.5?", shape=diamond];
    danisman_onayi [label="Danışman onayı gerekli", shape=box];
    danisman_gerek_yok [label="Danışman onayı gerekli değil", shape=box];

    kayit_ozeti [label="Kayıt özeti göster", shape=box];
    kayit_onay [label="Kayıt onaylıyor musunuz?", shape=diamond];
    kayit_tamam [label="Kayıt tamamlandı", shape=box];
    kayit_iptal [label="Kayıt iptal edildi", shape=box];

    giris_hata [label="Giriş başarısız", shape=box];
    bitir [label="BİTİR", shape=oval];

    // Bağlantılar
    basla -> ogrenci_no -> sifre -> giris_kontrol;
    giris_kontrol -> ders_listesi [label="Evet"];
    giris_kontrol -> giris_hata [label="Hayır"];
    giris_hata -> bitir;

    ders_listesi -> ders_sec;

    ders_sec -> kontenjan_kontrol;
    kontenjan_kontrol -> onkosul_kontrol [label="Evet"];
    kontenjan_kontrol -> ders_ekleme_hata [label="Hayır"];

    onkosul_kontrol -> zaman_kontrol [label="Evet"];
    onkosul_kontrol -> ders_ekleme_hata [label="Hayır"];

    zaman_kontrol -> kredi_kontrol [label="Hayır"]; // Zaman çakışıyor ise
    zaman_kontrol -> kredi_kontrol [label="Evet"]; // Zaman uygun ise

    kredi_kontrol -> ders_ekle [label="Evet"];
    kredi_kontrol -> ders_ekleme_hata [label="Hayır"];

    ders_ekle -> ders_cikarmak;
    ders_ekleme_hata -> ders_cikarmak;

    ders_cikarmak -> ders_cikar [label="Evet"];
    ders_cikarmak -> devam_ders_sec [label="Hayır"];
    ders_cikar -> devam_ders_sec;
    ders_cikar_hata -> devam_ders_sec;

    devam_ders_sec -> ders_sec [label="Evet"];
    devam_ders_sec -> gpa_kontrol [label="Hayır"];

    gpa_kontrol -> danisman_onayi [label="Evet"];
    gpa_kontrol -> danisman_gerek_yok [label="Hayır"];

    danisman_onayi -> kayit_ozeti;
    danisman_gerek_yok -> kayit_ozeti;

    kayit_ozeti -> kayit_onay;
    kayit_onay -> kayit_tamam [label="Evet"];
    kayit_onay -> kayit_iptal [label="Hayır"];

    kayit_tamam -> bitir;
    kayit_iptal -> bitir;
}
Bu DOT diyagramı:
Tüm kontrolleri elmas olarak gösterir.
Ders ekleme ve çıkarma döngüsünü içerir.
GPA ve danışman onayı kararını içerir.
Kayıt özeti ve onay sürecini kapsar.
