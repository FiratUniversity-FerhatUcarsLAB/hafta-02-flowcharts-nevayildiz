ATM para çekme sistemi için detaylı pseudocode yazmanı istiyorum.
şunları içermeli: PIN doğrulama (3 hak), bakiye kontrolü, tutar
kontrolü (20 TL katları), günlük limit kontrolü,  işlem tekrarı seçeneği. Tüm
adımları BASLA, OKU, YAZ, EGER-ISE, DONGU yapılarıyla yaz.”Tabii! Aşağıda istediğin tüm özellikleri içeren detaylı ATM para çekme sistemi pseudocode’u verdim.
Tüm adımlar, klasik algoritma mantığıyla (BASLA, OKU, YAZ, EĞER-İSE, DEĞİLSE, DÖNGÜ, vb.) yazılmıştır.BASLA

   bakiye ← 5000          // Başlangıç bakiyesi
   gunluk_limit ← 3000     // Günlük para çekme limiti
   deneme_hakki ← 3        // PIN deneme hakkı
   dogru_pin ← 1234        // Doğru PIN

   // --- PIN DOĞRULAMA ---
   DONGU (deneme_hakki > 0)
      YAZ "Lütfen 4 haneli PIN'inizi giriniz: "
      OKU girilen_pin

      EĞER (girilen_pin = dogru_pin) İSE
         YAZ "PIN doğrulandı."
         ÇIK DONGUDEN
      DEĞİLSE
         deneme_hakki ← deneme_hakki - 1
         YAZ "Hatalı PIN! Kalan deneme hakkı: ", deneme_hakki
      SON
   SON DONGU

   EĞER (deneme_hakki = 0) İSE
      YAZ "3 kez hatalı giriş yaptınız. Kartınız bloke oldu!"
      BITIR
   SON

   // --- ANA İŞLEM DÖNGÜSÜ ---
   DONGU (TRUE)
      YAZ "----------------------------------"
      YAZ "1 - Bakiye Görüntüle"
      YAZ "2 - Para Çek"
      YAZ "3 - Çıkış"
      YAZ "----------------------------------"
      YAZ "Seçiminizi giriniz: "
      OKU secim

      // --- SEÇİMLER ---
      EĞER (secim = 1) İSE
         YAZ "Mevcut Bakiyeniz: ", bakiye, " TL"

      DEĞİLSE EĞER (secim = 2) İSE
         YAZ "Çekmek istediğiniz tutarı giriniz: "
         OKU tutar

         // --- TUTAR KONTROLLERİ ---
         EĞER (tutar MOD 20 ≠ 0) İSE
            YAZ "Hata: Tutar 20 TL'nin katı olmalıdır!"
         DEĞİLSE EĞER (tutar > bakiye) İSE
            YAZ "Hata: Yetersiz bakiye!"
         DEĞİLSE EĞER (tutar > gunluk_limit) İSE
            YAZ "Hata: Günlük para çekme limitiniz (", gunluk_limit, " TL) aşıldı!"
         DEĞİLSE
            bakiye ← bakiye - tutar
            gunluk_limit ← gunluk_limit - tutar
            YAZ "İşlem başarılı! Kalan bakiye: ", bakiye, " TL"
            YAZ "Kalan günlük limit: ", gunluk_limit, " TL"
         SON
      DEĞİLSE EĞER (secim = 3) İSE
         YAZ "Kartınızı almayı unutmayın. İyi günler!"
         ÇIK DONGUDEN
      DEĞİLSE
         YAZ "Geçersiz seçim! Lütfen tekrar deneyin."
      SON

      // --- İŞLEM TEKRARI SORUSU ---
      YAZ "Başka bir işlem yapmak ister misiniz? (E/H): "
      OKU cevap

      EĞER (cevap = "H" veya cevap = "h") İSE
         YAZ "Kartınızı almayı unutmayın. İyi günler!"
         ÇIK DONGUDEN
      SON
   SON DONGU

BITIR
🧩 Kapsadığı Adımlar
✅ PIN doğrulama (3 hak)
✅ Bakiye kontrolü
✅ Tutar kontrolü (20 TL katı)
✅ Günlük limit kontrolü
✅ İşlem tekrarı (E/H seçimi)
✅ Bakiye görüntüleme ve çıkış seçenekleri
“Bu pseudocode’u Graphviz DOT diline çevir. Başla/Bitir için oval,
Harika! 🎯
Aşağıda verdiğim Graphviz (DOT) kodu, yukarıdaki ATM para çekme sistemi pseudocode’unun tüm adımlarını şekillerle (oval, paralelkenar, kutu, elmas) ve etiketli oklarla gösterir.
Her düğüm (node) için uygun şekiller:
Oval → Başla / Bitir
Paralelkenar → Girdi & Çıktı (OKU, YAZ)
Kare/Kutu → İşlem (atama, bakiye azaltma vb.)
Elmas → Karar (EĞER-İSE yapıları)girdi/çıktı için parallelogram, işlem için box, karar için diamond kullan.
Tüm okları ve etiketleri ekle.
”digraph ATM {
    rankdir=TB;
    node [fontname="Arial", fontsize=11];

    // --- Şekil Tanımları ---
    start [label="BASLA", shape=oval, style=filled, fillcolor=lightgreen];
    end [label="BITIR", shape=oval, style=filled, fillcolor=lightcoral];

    pin_input [label="OKU girilen_pin", shape=parallelogram];
    pin_check [label="girilen_pin = dogru_pin ?", shape=diamond];
    pin_correct [label="PIN doğrulandı", shape=parallelogram];
    pin_wrong [label="Hatalı PIN!\n deneme_hakki = deneme_hakki - 1", shape=box];
    pin_try [label="deneme_hakki > 0 ?", shape=diamond];
    card_block [label="Kart bloke edildi!", shape=parallelogram];

    menu [label="Menü Göster\n1-Bakiye\n2-Para Çek\n3-Çıkış", shape=parallelogram];
    read_choice [label="OKU secim", shape=parallelogram];
    choice_check [label="Seçim ?", shape=diamond];

    show_balance [label="YAZ bakiye", shape=parallelogram];

    read_amount [label="OKU tutar", shape=parallelogram];
    check_mod [label="tutar % 20 = 0 ?", shape=diamond];
    check_balance [label="tutar ≤ bakiye ?", shape=diamond];
    check_limit [label="tutar ≤ günlük limit ?", shape=diamond];
    withdraw [label="bakiye -= tutar\ngünlük_limit -= tutar", shape=box];
    withdraw_done [label="YAZ işlem başarılı\nKalan bakiye ve limit", shape=parallelogram];

    invalid_choice [label="Geçersiz seçim!", shape=parallelogram];
    limit_error [label="Günlük limit aşıldı!", shape=parallelogram];
    balance_error [label="Yetersiz bakiye!", shape=parallelogram];
    mod_error [label="Tutar 20 TL'nin katı olmalı!", shape=parallelogram];

    another [label="Başka işlem? (E/H)", shape=parallelogram];
    repeat [label="cevap = 'E' ?", shape=diamond];
    goodbye [label="Kartınızı almayı unutmayın.\nİyi günler!", shape=parallelogram];

    // --- Bağlantılar ---
    start -> pin_input;
    pin_input -> pin_check;

    pin_check -> pin_correct [label="Evet"];
    pin_check -> pin_wrong [label="Hayır"];

    pin_wrong -> pin_try;
    pin_try -> pin_input [label="Evet"];
    pin_try -> card_block [label="Hayır"];

    card_block -> end;
    pin_correct -> menu;

    // --- Ana Menü ---
    menu -> read_choice;
    read_choice -> choice_check;

    choice_check -> show_balance [label="1"];
    choice_check -> read_amount [label="2"];
    choice_check -> goodbye [label="3"];
    choice_check -> invalid_choice [label="Diğer"];

    show_balance -> another;

    // --- Para Çekme İşlemi ---
    read_amount -> check_mod;
    check_mod -> check_balance [label="Evet"];
    check_mod -> mod_error [label="Hayır"];

    mod_error -> another;

    check_balance -> check_limit [label="Evet"];
    check_balance -> balance_error [label="Hayır"];

    balance_error -> another;

    check_limit -> withdraw [label="Evet"];
    check_limit -> limit_error [label="Hayır"];

    limit_error -> another;

    withdraw -> withdraw_done;
    withdraw_done -> another;

    invalid_choice -> another;

    // --- İşlem Tekrarı ---
    another -> repeat;
    repeat -> menu [label="Evet"];
    repeat -> goodbye [label="Hayır"];

    goodbye -> end;
}
🧩 Bu diyagramda yer alan akış sırası:
PIN doğrulama (3 hak)
Kart bloke kontrolü
Ana menü (bakiye, para çek, çıkış)
Tutarın 20 TL katı, bakiye ve günlük limit kontrolü
İşlem tekrarı (E/H)
Kart iadesi ve bitiş
